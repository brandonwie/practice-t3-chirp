import Head from "next/head";
import { SignInButton, useUser } from "@clerk/nextjs";

import { type NextPage } from "next";

import { type RouterOutputs } from "~/utils/api";
import { api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage } from "../components/loading";
import { useRef, useState } from "react";

dayjs.extend(relativeTime);

const TopBanner = ({ message }: { message: string }) => {
  return (
    <div className="absolute left-0 top-0 flex h-[100px] w-full items-center justify-center bg-red-100/90 text-slate-800 transition delay-300 ease-in-out">
      {message}
    </div>
  );
};

const CreatePostWizard = () => {
  const { user } = useUser();
  const [input, setInput] = useState("");
  const [error, setError] = useState<string | null>(null);
  const ref = useRef<HTMLInputElement | null>(null);
  const ctx = api.useContext();

  const { mutate, isLoading: isPosting } = api.posts.create.useMutation({
    onSuccess: () => {
      setInput("");
      void ctx.posts.getAll.invalidate();
    },
    onError: (err) => {
      if (err.data?.zodError?.fieldErrors.content) {
        setError(
          err.data.zodError.fieldErrors.content[0] ?? "Something went wrong"
        );
      }
      setTimeout(() => {
        setError(null);
      }, 3000);
    },
  });

  if (!user) return null;

  return (
    <div className={"flex w-full gap-3"}>
      <Image
        src={user.profileImageUrl}
        alt="Profile image"
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <input
        ref={ref}
        placeholder="Type some emojis!"
        className="grow bg-transparent outline-none"
        type="text"
        value={input}
        onChange={(e) => setInput(e.target.value)}
        onKeyDown={(e) => e.key === "Enter" && mutate({ content: input })}
        disabled={isPosting}
      />
      <button onClick={() => mutate({ content: input })} disabled={isPosting}>
        Post
      </button>
      {error && <TopBanner message={error} />}
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className={"flex gap-3 border-b border-slate-400 p-8"}>
      <Image
        src={author.profileImageUrl}
        alt={`@${author.username} profile image`}
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="flex gap-1">
          <span>{`@${author.username}`}</span>
          <span>Â·</span>
          <span className="font-thin">{dayjs(post.createdAt).fromNow()}</span>
        </div>

        <span className="text-2xl">{post.content}</span>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingPage />;
  if (!data) return <div>Something went wrong</div>;

  return (
    <div className={"flex flex-col"}>
      {data?.map((fullPost) => (
        <PostView key={fullPost.post.id} {...fullPost} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { isLoaded: userLoaded, isSignedIn } = useUser();

  // Return empty div if BOTH aren't loaded, since user tends to load faster
  if (!userLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />

        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={"flex justify-center"}>
        <div className={"w-full border-x border-slate-400 md:max-w-2xl"}>
          <div className={"flex border-b border-slate-400 p-4"}>
            {!isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
